{
  "compilerOptions": {
    "module": "CommonJS", // 编译结果使用的模块系统, 比如commonjs的require, es6的import
    // "module": "ESNext",
    "target": "es6", // language 编译结果语言语法层面，比如尖头函数在es5中就会转化成function
    "moduleResolution": "node", // 模块寻找方式
    "lib": ["ESNext", "DOM", "ScriptHost"], // 与target有关，可能需要提供相关的声明
    /* 支持使用import d from 'cjs'的方式引入commonjs包
    * https://toyobayashi.github.io/2020/06/29/ESModule/
    * 现实中，cjs包是能引入esm，ES的默认导出可以对应 CommonJS 模块导出对象的default属性
    * 但是反之就没法对应上了，esModuleInterop是为了解决esmodule中引入cjs默认导出方案(即require.exports=foo),
    * __esModule 是用来兼容 ES 模块导入 CommonJS 模块默认导出方案, 个人推荐向标准看齐，
    * 在以后写 CommonJS 模块的时候尽量不要用 module.exports 导出单对象，而是导出具体的属性名 exports.foo = bar,
    * 在 ES 模块中也尽量不要用 export default */
    "esModuleInterop": true, 
    "sourceMap": true,
    // "noImplicitAny": true,
    // "outDir": "./demo/vue3/dist"
  },
  // "include": ["./demo/vue3/*"]
}
// NOTICE: 
// 1. Add tsc options -p or --project when to specify a tsconfig.json, for example:
//      tsc -w -p ./demo/vue3 ./demo/vue3 include tsconfig.json 
//    if use tsc -w ./demo/vue3/tsconfig means only compile ./demo/vue3/tsconfig.json, and emit error can't support json file
// 2. debug ts file need "sourcemap: true"